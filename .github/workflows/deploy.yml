on:
  push:
    branches:
      - develop
      - main

jobs:

  build:
    name: Build, push, and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Export project name
        run: export PROJECT_NAME=$(echo ${{ github.repository }} | cut -d / -f2); echo $PROJECT_NAME

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Open JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn --settings settings.xml clean install

      - name: Deploy Maven artifact to Github registry
        run:  mvn --settings settings.xml deploy -Dpersonal_access_token=${{ secrets.GITHUB_TOKEN }}

      - name: Publish Pacts
        run: mvn --settings settings.xml pact:publish -Dpactbrokerurl=${{ secrets.PACTBROKER_URL }} -Dpactbrokerusername=${{ secrets.PACTBROKER_USERNAME }} -Dpactbrokerpassword=${{ secrets.PACTBROKER_PASSWORD }}

      - name: Run project name
        run: echo $PROJECT_NAME

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/sonamsamdupkhangsar/email-rest-service:latest
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Print my docker imageid in a separate step
        run: echo "imageid ${{ steps.docker_build.outputs.imageid }}"

#      - name: Build container image
#        run: docker build -t ghcr.io/sonamsamdupkhangsar/$(echo ${{ github.repository }} | cut -d / -f2):latest .

#      - name: Login to Github Registry
#        run: echo ${{ secrets.PERSONAL_ACCESS_TOKEN }} | docker login ghcr.io -u USERNAME --password-stdin

#      - name: Push Docker image to github registry
#        run: docker push ghcr.io/sonamsamdupkhangsar/email-rest-service:latest

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.K8CLUSTER_NAME }}

      - name: Deploy to k8 cluster
        run: |
          export PROJECT_NAME=$(echo ${{ github.repository }} | cut -d / -f2)
          helm repo add sonam https://sonamsamdupkhangsar.github.io/sonam-helm-chart/
          helm upgrade --install --timeout 5m0s \
            --set "image.repository=ghcr.io/sonamsamdupkhangsar/$PROJECT_NAME" \
            --set "image.tag=latest" \
            --set "project=$PROJECT_NAME" \
            --set "envs[0].name=EMAIL_HOST" --set "envs[0].value=${{ secrets.EMAIL_HOST }}" \
            --set "envs[1].name=EMAIL_PORT" --set "envs[1].value=${{ secrets.EMAIL_PORT }}" \
            --set "envs[2].name=EMAIL_USERNAME" --set "envs[2].value=${{ secrets.EMAIL_USERNAME }}" \
            --set "envs[3].name=EMAIL_PASSWORD" --set "envs[3].value=${{ secrets.EMAIL_PASSWORD }}" \
             $PROJECT_NAME \
            sonam/mychart -f values-backend.yaml --version 0.1.13 --namespace=backend